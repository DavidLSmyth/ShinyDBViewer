name: Build Dashboard

on: workflow_dispatch
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v3

    - name: 'Generate Dashboard'
      uses: ethomson/issue-dashboard@v1
      with:
        config: |
          title: 'Dashboard'
          output:
            format: html
            filename: 'out/dashboard.html'
          sections:
          - title: 'Pull Requests'
            widgets:
            - type: number
              script: |
                  const repo = 'DavidLSmyth/ShinyDBViewer'
                  const results = await github.search.issuesAndPullRequests({
                    q: `repo:${repo} is:issue is:open label:p1 created:<${date('-1 day')}`
                  })
                  const count = results.data.total_count
                  const title = 'P1 Issue Count'
                  const color = (count > 10) ? 'red' : 'green'
                  return { value: count, title: title, color: color }
            - type: number
              script: |
                  const repo = 'DavidLSmyth/ShinyDBViewer'
                  const results = await github.search.issuesAndPullRequests({
                    q: `repo:${repo} is:issue is:open label:p2 created:<${date('-1 day')}`
                  })
                  const count = results.data.total_count
                  const title = 'P2 Issue Count'
                  const color = (count > 10) ? 'red' : 'green'
                  return { value: count, title: title, color: color }
                  
            - type: number
              script: |
                  const repo = 'DavidLSmyth/ShinyDBViewer'
                  const results = await github.search.issuesAndPullRequests({
                    q: `repo:${repo} is:issue is:open label:p2 created:<${date('-1 day')}`
                  })
                  const count = results.data.total_count
                  const title = 'P2 Issue Count'
                  const color = (count > 10) ? 'red' : 'green'
                  return { value: count, title: title, color: color }
                  
            - type: 'table'
              title: 'Merged Pull Requests (For This Week)'
              issue_query: 'repo:libgit2/libgit2 is:pr author:DavidLSmyth is:closed merged:{{ date("-7 days") }}..{{ date("-1 days") }} sort:created-asc'
            - type: graph
              title: Issues
              elements:
              - title: P1
                value: 10
                color: green
              - title: P2
                value: 16
              - title: Neopolitan
                value: 15
              - title: 'New Haven'
                value: 1
                color: red
        token: ${{ github.token }}

    - name: Publish Documentation
      run: |
        git add .
        git config user.name 'DavidLSmyth'
        git config user.email 'dljsmyth10@gmail.com'
        git commit -m 'Documentation update' --allow-empty
        git push origin master
      working-directory: out
